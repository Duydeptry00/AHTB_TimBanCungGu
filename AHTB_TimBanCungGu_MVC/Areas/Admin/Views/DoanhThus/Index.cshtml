@{
    ViewBag.Title = "Thống Kê Doanh Thu";
}


@{
    ViewBag.Title = "Thống Kê Doanh Thu";
}

<h1 style="text-align: center; color: #fff; font-size: 36px; font-family: 'Roboto', sans-serif;">
    Thống Kê Doanh Thu
</h1>

<div style="text-align: center; margin-bottom: 20px;">
    <label for="revenueSelector" style="color: #fff; font-size: 20px; font-family: 'Roboto', sans-serif;">
        Chọn Kiểu Doanh Thu:
    </label>
    <select id="revenueSelector" onchange="updateChart()"
            style="padding: 8px 12px; border-radius: 5px; border: 1px solid #fff;
                   background-color: rgba(255, 255, 255, 0.3); color: #000;
                   font-size: 16px; margin-left: 10px; font-family: 'Roboto', sans-serif;">
        <option value="monthly">Doanh Thu Theo Tháng</option>
        <option value="yearly">Doanh Thu Theo Năm</option>
    </select>

    <label id="yearLabel" for="yearSelector" style="color: #fff; font-size: 20px; font-family: 'Roboto', sans-serif; margin-left: 20px;">
        Chọn Năm:
    </label>
    <select id="yearSelector" onchange="updateChart()"
            style="padding: 8px 12px; border-radius: 5px; border: 1px solid #fff;
                   background-color: rgba(255, 255, 255, 0.3); color: #000;
                   font-size: 16px; margin-left: 10px; font-family: 'Roboto', sans-serif;">
        @foreach (var year in ViewBag.Years)
        {
            <option value="@year">@year</option>
        }
    </select>
</div>

<canvas id="revenueChart" width="600" height="400"></canvas>

<!-- Phần hiển thị tổng doanh thu -->
<div id="totalRevenue" style="background-color: rgba(255, 255, 255, 0.1); padding: 20px; border-radius: 10px; margin-top: 20px;">
    <h2 style="text-align: center; color: #fff; font-size: 30px; font-family: 'Roboto', sans-serif;">
        Tổng Doanh Thu
    </h2>
    <p style="font-size: 22px; text-align: center; color: #fff; font-family: 'Roboto', sans-serif; display: block;" id="revenueText"></p>
</div>



<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Dữ liệu doanh thu theo tháng và năm từ ViewBag
    const monthlyTotals = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.MonthlyTotals));
    const yearlyTotals = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.YearlyTotals));

    const ctx = document.getElementById('revenueChart').getContext('2d');

    // Gán nhãn cho tháng
    const labels = ["Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6",
        "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12"];


    const revenues = {};

    // Xử lý dữ liệu doanh thu hàng tháng
    monthlyTotals.forEach(item => {
        if (!revenues[item.Year]) {
            revenues[item.Year] = Array(12).fill(0);
        }
        revenues[item.Year][item.Month - 1] = item.TotalTongTien;
    });

    const yearlyRevenue = yearlyTotals.map(item => ({
        year: item.Year,
        total: item.TotalTongTien
    }));

    function calculateTotalRevenue(data) {
        return data.reduce((total, amount) => total + amount, 0);
    }

    // Lấy năm hiện tại và năm gần nhất có doanh thu
    const currentYear = new Date().getFullYear(); // Lấy năm hiện tại
    const availableYears = Object.keys(revenues).map(Number); // Lấy danh sách các năm có dữ liệu
    const closestYear = availableYears.filter(year => year <= currentYear).pop() || availableYears[0]; // Lấy năm gần nhất
    console.log(availableYears)
    // Đặt dữ liệu biểu đồ dựa trên năm gần nhất
    const revenueData = revenues[closestYear] || Array(12).fill(0);
   
    const revenueChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [{
                label: 'Doanh Thu Theo Tháng',
                data: revenueData,
                backgroundColor: 'rgb(76, 187, 76)',  // Màu xanh lá
                borderColor: 'rgb(34, 139, 34)',      // Viền xanh lá đậm hơn
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            scales: {
                y: {
                    beginAtZero: true,
                    title: {
                        display: true,
                        text: 'Doanh Thu (VND)',
                        font: { size: 18, family: 'Roboto', weight: 'bold' }
                    },
                    ticks: { font: { size: 16, color: '#fff' } }
                },
                x: {
                    title: {
                        display: true,
                        font: { size: 18, family: 'Roboto', weight: 'bold' }
                    },
                    ticks: { font: { size: 16, color: '#fff' } }
                }
            },
            plugins: {
                title: {
                    font: { size: 30, family: 'Roboto', weight: 'bold', color: '#fff' }
                },
                legend: {
                    labels: {
                        font: { size: 20, family: 'Roboto', color: '#fff' }
                    }
                }
            }
        }
    });



    function updateChart() {
        const selectedValue = document.getElementById('revenueSelector').value;
        const selectedYear = document.getElementById('yearSelector').value;

        if (selectedValue === "monthly") {
            document.getElementById('yearLabel').style.display = "inline";
            document.getElementById('yearSelector').style.display = "inline";

            revenueChart.data.labels = labels;
            revenueChart.data.datasets[0].data = revenues[selectedYear] || Array(12).fill(0);
            revenueChart.data.datasets[0].label = 'Doanh Thu Theo Tháng';
            revenueChart.options.plugins.title.text = 'Doanh Thu Theo Tháng';

            document.getElementById('revenueText').innerHTML = `
                    <strong>Tổng Doanh Thu Theo Năm ${selectedYear}:</strong> ${calculateTotalRevenue(revenues[selectedYear]).toLocaleString()} VND
                `;
        } else {
            document.getElementById('yearLabel').style.display = "none";
            document.getElementById('yearSelector').style.display = "none";

            revenueChart.data.labels = yearlyRevenue.map(y => y.year);
            revenueChart.data.datasets[0].data = yearlyRevenue.map(y => y.total);
            revenueChart.data.datasets[0].label = 'Doanh Thu Theo Năm';
            revenueChart.options.plugins.title.text = 'Doanh Thu Theo Năm';

            document.getElementById('revenueText').innerHTML = yearlyRevenue.map(y =>
                `<strong>Tổng Doanh Thu Năm ${y.year}:</strong> ${y.total.toLocaleString()} VND`).join(', ');
        }

        revenueChart.update();
    }

    // Gọi hàm cập nhật biểu đồ
    updateChart();
</script>
