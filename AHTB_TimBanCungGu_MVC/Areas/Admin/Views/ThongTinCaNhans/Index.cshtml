@model IEnumerable<AHTB_TimBanCungGu_API.Models.ThongTinCaNhan>

@{
    ViewData["Title"] = "Thông Tin Người Dùng";
    Layout = "~/Areas/Admin/Views/SharedAdmin/_LayoutAdmin.cshtml";
}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AHTB Cinema Management</title>
    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
    <!-- Custom CSS -->
    <link rel="stylesheet" href="~/css/style.css">
    <style>
        .text-pink {
            color: #ff69b4; /* Màu hồng */
        }


        .btn-danger {
            background-color: #dc3545; /* Màu đỏ */
        }

        .btn-success {
            background-color: #28a745; /* Màu xanh lá cây */
        }

            .btn-danger:hover, .btn-success:hover {
                opacity: 0.8;
            }

    </style>
</head>
<body style="background-color: #444343">
    <div class="d-flex flex-column min-vh-100">
        <!-- Search bar - Căn giữa và phía trên bảng -->
        <div class="d-flex justify-content-center align-items-center my-3">
            <div class="col-md-6">
                <form method="get" asp-action="Search" class="search-form">
                    <div class="input-group">
                        <input type="text" class="form-control" name="searchString" placeholder="Tìm kiếm..." value="@ViewData["CurrentFilter"]" />
                        <button class="btn btn-outline-secondary" type="submit">
                            <i class="bi bi-search"></i>
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <!-- User info table với icon giới tính và premium -->
        <div class="table-container flex-grow-1 overflow-auto px-5">
            <table class="table table-dark table-hover table-bordered text-center">
                <thead>
                    <tr>
                        <th>Username</th>
                        <th>Họ Tên</th>
                        <th style="min-width: 100px;">Giới Tính</th>
                        <th>Ngày Sinh</th>
                        <th>SĐT</th>
                        <th>Premium</th>
                        <th>Ngày Tạo</th>
                        <th>Trạng Thái</th>
                        <th>Thao tác</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.User.UserName</td>
                            <td>@item.HoTen</td>
                            <td>
                                @if (item.GioiTinh == "Nam")
                                {
                                    <i class="bi bi-gender-male text-primary"></i>
                                }
                                else if (item.GioiTinh == "Nữ")
                                {
                                    <i class="bi bi-gender-female text-pink"></i>
                                }
                            </td>
                            <td>@item.NgaySinh?.ToString("dd/MM/yyyy")</td>
                            <td>@item.SoDienThoai</td>
                            <td>
                                @if (item.IsPremium)
                                {
                                    <i class="bi bi-check-circle-fill text-success"></i>
                                }
                                else
                                {
                                    <i class="bi bi-x-circle-fill text-danger"></i>
                                }
                            </td>
                            <td>@item.NgayTao.ToString("dd/MM/yyyy")</td>
                            <td id="status-@item.IDProfile">
                                @if (item.TrangThai == "Hoạt Động")
                                {
                                    <span class="text-success"><strong>Hoạt Động</strong></span>
                                }
                                else
                                {
                                    <span class="text-danger"><strong>Không Hoạt Động</strong></span>
                                }
                            </td>
                            <td>
                                <button class="btn toggle-status" data-id="@item.IDProfile" data-status="@item.TrangThai">
                                    @if (item.TrangThai == "Hoạt Động")
                                    {
                                        <i class="bi bi-lock text-danger" title="Khóa"></i>
                                    }
                                    else
                                    {
                                        <i class="bi bi-unlock text-success" title="Mở khóa"></i>
                                    }
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Bootstrap JS và jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- SweetAlert2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">

    <!-- SweetAlert2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.toggle-status').click(function () {
                var userId = $(this).data('id');
                var currentStatus = $(this).data('status');
                var action = currentStatus === "Hoạt Động" ? "khóa" : "mở khóa";

                if (currentStatus === "Hoạt Động") {
                    Swal.fire({
                        title: 'Khóa tài khoản trong bao lâu?',
                        html:
                            '<div style="display: flex; align-items: center; margin: 5px 0;">' +
                            '<label for="days" style="width: 60px;">Ngày</label>' +
                            '<input id="days" type="number" class="swal2-input" placeholder="0" style="width: 300px;" min="0">' +
                            '</div>' +
                            '<div style="display: flex; align-items: center; margin: 5px 0;">' +
                            '<label for="months" style="width: 60px;">Tháng</label>' +
                            '<input id="months" type="number" class="swal2-input" placeholder="0" style="width: 300px;" min="0">' +
                            '</div>' +
                            '<div style="display: flex; align-items: center; margin: 5px 0;">' +
                            '<label for="years" style="width: 60px;">Năm</label>' +
                            '<input id="years" type="number" class="swal2-input" placeholder="0" style="width: 300px;" min="0">' +
                            '</div>' +
                            '<div style="display: flex; align-items: center; margin: 5px 0;">' +
                            '<label for="lyDoKhoa" style="width: 60px;">Lý do</label>' +
                            '<select id="lyDoKhoa" class="swal2-input" style="width: 300px; padding: 8px; border: 1px solid #ced4da; border-radius: 4px;margin-left: 40px;">' +
                            '<option value="">Chọn lý do</option>' +
                            '<option value="Quảng cáo những trang web bất hợp pháp">Quảng cáo những trang web bất hợp pháp</option>' +
                            '<option value="Đăng tải nội dung phản cảm">Đăng tải nội dung phản cảm</option>' +
                            '<option value="Ngôn ngữ không phù hợp">Ngôn ngữ không phù hợp</option>' +
                            '</select>' +
                            '</div>',
                        focusConfirm: false,
                        showCancelButton: true,
                        confirmButtonText: 'Xác nhận',
                        cancelButtonText: 'Hủy',
                        preConfirm: () => {
                            const daysInput = document.getElementById('days');
                            const monthsInput = document.getElementById('months');
                            const yearsInput = document.getElementById('years');
                            const days = daysInput.value || 0;
                            const months = monthsInput.value || 0;
                            const years = yearsInput.value || 0;
                            const lyDoKhoa = document.getElementById('lyDoKhoa').value || '';

                            let isValid = true;

                            // Kiểm tra bổ sung để đảm bảo không có giá trị âm
                            if (days < 0) {
                                isValid = false;
                                daysInput.style.border = '1px solid red'; // Đổi màu border
                            } else {
                                daysInput.style.border = ''; // Khôi phục màu border
                            }

                            if (months < 0) {
                                isValid = false;
                                monthsInput.style.border = '1px solid red'; // Đổi màu border
                            } else {
                                monthsInput.style.border = ''; // Khôi phục màu border
                            }

                            if (years < 0) {
                                isValid = false;
                                yearsInput.style.border = '1px solid red'; // Đổi màu border
                            } else {
                                yearsInput.style.border = ''; // Khôi phục màu border
                            }

                            // Kiểm tra lý do không được bỏ trống
                            if (!lyDoKhoa) {
                                isValid = false;
                                const lyDoKhoaInput = document.getElementById('lyDoKhoa');
                                lyDoKhoaInput.style.border = '1px solid red'; // Đổi màu border cho input lý do
                                Swal.showValidationMessage('Vui lòng chọn lý do');
                            } else {
                                document.getElementById('lyDoKhoa').style.border = ''; // Khôi phục màu border nếu có giá trị hợp lệ
                            }

                            if (!isValid) {
                                return false;
                            }

                            return { days: days, months: months, years: years, lyDoKhoa: lyDoKhoa };
                        }
                    }).then((result) => {
                        if (result.isConfirmed) {
                            const duration = result.value;

                            // Gửi dữ liệu qua AJAX
                            $.ajax({
                                url: '@Url.Action("ToggleStatus", "ThongTinCaNhans")',
                                type: 'POST',
                                data: {
                                    id: userId,
                                    days: duration.days,
                                    months: duration.months,
                                    years: duration.years,
                                    lyDoKhoa: duration.lyDoKhoa
                                },
                                success: function (response) {
                                    if (response.success) {
                                        Swal.fire(
                                            'Thành công!',
                                            `Tài khoản đã được ${action} trong ${duration.days} ngày, ${duration.months} tháng, ${duration.years} năm.`,
                                            'success'
                                        ).then(() => {
                                            location.reload();
                                        });
                                    } else {
                                        Swal.fire(
                                            'Lỗi!',
                                            response.message,
                                            'error'
                                        );
                                    }

                                },
                                error: function () {
                                    Swal.fire(
                                        'Có lỗi xảy ra!',
                                        'Xin vui lòng thử lại.',
                                        'error'
                                    );
                                }
                            });
                        }
                    });

                    // Thiết lập sự kiện để kiểm tra lại input khi có sự thay đổi
                    $(document).on('input', '#days, #months', function () {
                        if (this.value >= 0) {
                            this.style.border = ''; // Khôi phục màu border khi giá trị hợp lệ
                        }
                    });

                    // Thiết lập sự kiện cho lý do khi có sự thay đổi
                    $(document).on('change', '#lyDoKhoa', function () {
                        const yearsInput = document.getElementById('years');
                        if (this.value) {
                            this.style.border = ''; // Khôi phục màu border khi lý do được chọn
                            Swal.hideValidationMessage(); // Ẩn thông báo lỗi nếu có giá trị hợp lệ

                            // Nếu lý do là "Quảng cáo những trang web bất hợp pháp", tự điền giá trị 100 vào input năm và disable nó
                            if (this.value === "Quảng cáo những trang web bất hợp pháp") {
                                yearsInput.value = 100; // Tự động điền giá trị 100 vào input năm
                                yearsInput.disabled = true; // Khóa input năm
                            } else {
                                yearsInput.value = ''; // Xóa giá trị nếu không phải lý do đó
                                yearsInput.disabled = false; // Mở khóa input năm để người dùng có thể nhập
                            }
                        }
                    });
                } else {
                    Swal.fire({
                        title: 'Bạn có chắc chắn muốn mở tài khoản này?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Có',
                        cancelButtonText: 'Không'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: '@Url.Action("ToggleStatus", "ThongTinCaNhans")',
                                type: 'POST',
                                data: { id: userId },
                                success: function (response) {
                                    if (response.success) {
                                        Swal.fire(
                                            'Thành công!',
                                            `Tài khoản đã được ${action}.`,
                                            'success'
                                        ).then(() => {
                                            location.reload();
                                        });
                                    } else {
                                        Swal.fire(
                                            'Lỗi!',
                                            response.message,
                                            'error'
                                        );
                                    }
                                },
                                error: function () {
                                    Swal.fire(
                                        'Có lỗi xảy ra!',
                                        'Xin vui lòng thử lại.',
                                        'error'
                                    );
                                }
                            });
                        }
                    });
                }
            });
        });
    </script>
</body>