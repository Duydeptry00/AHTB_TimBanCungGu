@model AHTB_TimBanCungGu_API.ViewModels.VerifyOtpViewModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Xác thực mã OTP</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

    <!-- SweetAlert2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.0/dist/sweetalert2.min.css" rel="stylesheet">
</head>
<body>
    <div class="container d-flex align-items-center justify-content-center vh-100">
        <div class="card shadow" style="width: 50%;">
            <div class="card-body d-flex flex-column align-items-center justify-content-center" style="height: 400px;">
                <h2 class="card-title">Xác thực mã OTP</h2>

                <form asp-action="VerifyOtp" method="post" class="w-100">
                    <input type="hidden" asp-for="Email" />
                    <!-- Hidden field to store the concatenated OTP -->
                    <input type="hidden" id="Otp" name="Otp" />

                    <div class="form-group">
                        <label for="otp">Nhập mã OTP đã gửi đến email của bạn:</label>
                        <div class="d-flex justify-content-center">
                            @for (int i = 0; i < 6; i++)
                            {
                                <input type="text" class="form-control otp-input mx-1" maxlength="1" required oninput="moveToNext(this, @i)" onpaste="handlePaste(event)" />
                            }
                        </div>
                        <span asp-validation-for="Otp" class="text-danger"></span>
                    </div>
                    <button type="submit" class="w-100">Xác thực</button>
                </form>
            </div>
        </div>
    </div>

    <!-- SweetAlert2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.0/dist/sweetalert2.min.js"></script>

    <script>
        document.querySelector('form').addEventListener('submit', function (event) {
            // Vô hiệu hóa nút submit
            const submitButton = event.target.querySelector('button[type="submit"]');
            if (submitButton) {
                submitButton.disabled = true;
                submitButton.textContent = 'Đang xử lý...'; // Tùy chỉnh text nút nếu cần
            }
        });
        // Kiểm tra nếu có thông báo từ ViewBag
        document.addEventListener("DOMContentLoaded", function () {
            const message = @Html.Raw(Json.Serialize(ViewBag.Message));

            if (message) {
                Swal.fire({
                    title: message.startsWith("Đăng ký thành công! Vui lòng đăng nhập.") ? 'Thành công!' : 'Lỗi!',
                    text: message,
                    icon: message.startsWith("Đăng ký thành công! Vui lòng đăng nhập.") ? 'success' : 'error',
                    backdrop: true, // Bỏ qua nền mờ
                    showConfirmButton: true,
                    timer: 3000, // Thời gian tự động đóng modal (tùy chọn)
                    timerProgressBar: true
                }).then(() => {
                    if (message.startsWith("Đăng ký thành công! Vui lòng đăng nhập.")) {
                        window.location.href = '@Url.Action("Login", "loginvsregister")';
                    }
                });
            }
        });

        // Lấy thời gian bắt đầu từ LocalStorage nếu có
        const storedStartTime = localStorage.getItem('otpStartTime');
        const countdownDuration = 5 * 60 * 1000; // 5 phút (được tính bằng milisecond)

        let startTime;

        if (storedStartTime) {
            startTime = new Date(storedStartTime);
        } else {
            startTime = new Date();
            localStorage.setItem('otpStartTime', startTime.toString());
        }

        const endTime = startTime.getTime() + countdownDuration;

        // Cập nhật bộ đếm thời gian
        function updateTimer() {
            const currentTime = new Date().getTime();
            const timeLeft = endTime - currentTime;

            if (timeLeft <= 0) {
                document.getElementById("timer").innerHTML = "Thời gian hết hạn!";
                clearInterval(timerInterval);
            } else {
                const minutes = Math.floor(timeLeft / (1000 * 60));
                const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);
                document.getElementById("timer").innerHTML = `Thời gian còn lại: ${minutes} phút ${seconds} giây`;
            }
        }

        // Cập nhật bộ đếm thời gian mỗi giây
        const timerInterval = setInterval(updateTimer, 1000);

        function moveToNext(current, index) {
            if (current.value.length > 0) {
                current.value = current.value.charAt(current.value.length - 1);
                var nextInput = document.getElementsByClassName('otp-input')[index + 1];
                if (nextInput) {
                    nextInput.focus();
                }
            }
            updateOtpValue();
        }

        function updateOtpValue() {
            var otpValue = '';
            var inputs = document.getElementsByClassName('otp-input');
            for (var i = 0; i < inputs.length; i++) {
                otpValue += inputs[i].value;
            }
            document.getElementById('Otp').value = otpValue;
        }

        function handlePaste(event) {
            var pasteData = event.clipboardData.getData('text');
            var inputs = document.getElementsByClassName('otp-input');
            if (pasteData.length === inputs.length) {
                for (var i = 0; i < inputs.length; i++) {
                    inputs[i].value = pasteData.charAt(i);
                }
                updateOtpValue();
                event.preventDefault();
            }
        }

        document.addEventListener('keydown', function (event) {
            if (event.key === 'Backspace') {
                var inputs = document.getElementsByClassName('otp-input');
                for (var i = 0; i < inputs.length; i++) {
                    if (inputs[i] === document.activeElement && inputs[i].value === '') {
                        var prevInput = inputs[i - 1];
                        if (prevInput) {
                            prevInput.focus();
                            prevInput.value = '';
                        }
                    }
                }
            }
        });
    </script>

    <style>
        .swal2-container {
            z-index: 1050 !important; /* Đảm bảo modal SweetAlert2 hiển thị đúng */
        }

        body {
            background: url('../Image/Background/backgrounddangnhap.jpg') no-repeat center center fixed;
            background-size: cover;
        }

        .otp-input {
            margin: 10px;
            height: auto;
            width: 16.66666666667%;
            aspect-ratio: 1 / 1;
            text-align: center;
            font-size: 24px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        button {
            border-radius: 20px;
            border: 1px solid #000000;
            background: #000000;
            color: #FFF;
            font-size: 12px;
            font-weight: bold;
            padding: 12px 45px;
            letter-spacing: 1px;
            text-transform: uppercase;
        }
    </style>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js" integrity="sha384-mQ93Bf+QRjURv3hDRO5cFgYI94K1V4B/4S32QOMd8EoH+5eUmf1ku6p1ZKoRijci" crossorigin="anonymous"></script>
</body>
</html>
