@model AHTB_TimBanCungGu_API.ViewModels.MovieSession
@{
    ViewData["Title"] = "Xem phim cùng";
    Layout = null;
}
<!-- Thêm FontAwesome vào trang -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<div class="movie-header">
    <h2 class="movie-title">Phim Hiện Tại: @Model.MovieTitle</h2>
    <button id="btnGoBack" class="btn btn-back">Rời khỏi phòng</button>
</div>
<div class="film-container">
    <!-- Phần xem phim -->
    <div class="film-player">
        <iframe id="filmPlayer" src="@Model.MovieUrl" class="film-iframe" frameborder="0" allowfullscreen></iframe>
    </div>

    <!-- Phần nhắn tin -->
    <div class="chat-container">
        <h3>Nhắn Tin</h3>
        <div id="chatBox" class="chat-box">
            <!-- Tin nhắn sẽ được hiển thị ở đây -->
        </div>
<!-- Phần nhắn tin với icon gửi -->
<div class="chat-input-wrapper">
    <input type="text" id="chatInput" placeholder="Nhập tin nhắn..." class="chat-input" required />
    <button id="sendButton" class="btn-send">
        <i class="fas fa-paper-plane"></i> <!-- Icon gửi -->
    </button>
</div>
    </div>
</div>

<h3 class="select-movie-title">Chọn Phim Khác</h3>
<div class="movie-container">
    @if (ViewBag.DanhSachPhim != null)
    {
        @foreach (var phim in ViewBag.DanhSachPhim as List<AHTB_TimBanCungGu_API.Models.Phim>)
        {
            <div class="movie-card" data-movie-url="@phim.IDPhim" data-movie-title="@phim.TenPhim">
                <img src="/Uploads/@phim.HinhAnh" alt="@phim.TenPhim" style="width:200px; height:300px;" />
                <h3>@phim.TenPhim</h3>
                <button class="btn btn-primary select-movie-btn">
                    Xem Phim Này
                </button>
            </div>
        }
    }
    else
    {
        <p>Không có phim để hiển thị.</p>
    }
</div>
<!-- SweetAlert2 JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    var sessionId = "@ViewBag.SessionId";
    var currentUser = "@ViewBag.CurrentUser";
    var HotencurrentUser = "@ViewBag.HotenCurrentUser";
    console.log(HotencurrentUser);
    var HotenReceiverUser = "@ViewBag.HotenReceiverUser";
    const socket = new WebSocket(`http://localhost:60771/chats/ConnectMovieSession?sessionId=${sessionId}`);  // Cập nhật URL WebSocket nếu cần
   
    socket.onopen = function () {
        console.log("WebSocket connection established.");
    };

    socket.onmessage = function (event) {
        var message = JSON.parse(event.data);
        console.log("Gui", message);
        if (message.type == "leave") {
            displayLeaveMessageSW2(message)
        } else if (message.type == "chat") {
            displayMessage(message)
        }
        else if (message.type == "changeFilm") {
            updateMovie(message);
        }
    };
    // Hàm cập nhật giao diện với thông tin phim mới
    function updateMovie(message) {
        var newMovieTitle = message.newMovieTitle; // Tên phim mới
        let newMovieUrl = message.newMovieUrl;     // URL phim mới

        // Cập nhật tiêu đề phim trên giao diện
        const movieTitleElement = document.querySelector(".movie-title");
        movieTitleElement.textContent = `Phim Hiện Tại: ${newMovieTitle}`;

        // Cập nhật video player (Giả sử bạn sử dụng một iframe hoặc video player)
        let filmPlayer = document.getElementById("filmPlayer");
        filmPlayer.src = newMovieUrl;
    }
    function displayLeaveMessageSW2(message) {
        Swal.fire({
            icon: 'info', // Kiểu icon (info, success, warning, error)
            title: `${message.sender} đã rời khỏi phòng`, // Tiêu đề thông báo
            text: `${message.sender} ${message.text}`, // Nội dung thông báo
            timer: 1000, // Tự động đóng sau 3 giây
            timerProgressBar: true, // Thanh hiển thị thời gian
            showConfirmButton: false // Ẩn nút "OK"
        });
    }

    // Hiển thị tin nhắn vào chatBox
    function displayMessage(message) {
        var chatBox = document.getElementById("chatBox");
        var messageElement = document.createElement("div");  // Tạo phần tử div mới
        messageElement.textContent = message.sendername + ": " + message.text;  // Gắn nội dung tin nhắn vào div
        chatBox.appendChild(messageElement);  // Thêm tin nhắn vào chatBox

        // Cuộn xuống dưới cùng khi có tin nhắn mới
        chatBox.scrollTop = chatBox.scrollHeight;
    }
    document.querySelectorAll('.select-movie-btn').forEach((button) => {
        button.addEventListener('click', async function (event) {
            const movieCard = event.target.closest('.movie-card'); // Lấy phần tử movieCard mà người dùng click vào
            const movieUrl = movieCard.getAttribute('data-movie-url'); // URL phim
            const movieTitle = movieCard.getAttribute('data-movie-title'); // Tên phim

            if (movieUrl && movieTitle) {
                // Tạo thông điệp gửi đến server
                const changeFilmMessage = {
                    type: "changeFilm",
                    newMovieUrl: movieUrl,
                    newMovieTitle: movieTitle,
                    sender: currentUser,
                    sendername: HotencurrentUser
                };

                // Gửi thông điệp qua WebSocket
                socket.send(JSON.stringify(changeFilmMessage));

              
            } else {
                alert("Không tìm thấy thông tin phim.");
            }
        });
    });


    document.getElementById("btnGoBack").addEventListener("click", function () {
        // Hiển thị hộp thoại xác nhận
        Swal.fire({
            title: 'Bạn có chắc chắn?',
            text: "Bạn sẽ rời khỏi phòng và ngắt kết nối!",
            icon: 'warning',
            showCancelButton: true, // Hiển thị nút hủy
            confirmButtonColor: '#3085d6', // Màu nút đồng ý
            cancelButtonColor: '#d33', // Màu nút hủy
            confirmButtonText: 'Đồng ý',
            cancelButtonText: 'Hủy'
        }).then((result) => {
            if (result.isConfirmed) {
                // Người dùng chọn "Đồng ý"
                const leaveMessage = {
                    sender: currentUser,
                    sendername: HotencurrentUser,
                    text: "đã rời khỏi phòng.",
                    type: "leave" // Gắn thêm kiểu tin nhắn để server nhận diện
                };
                socket.send(JSON.stringify(leaveMessage));
                // Đóng kết nối WebSocket
                if (socket) {
                    socket.close();
                }

                window.location.href = "@Url.Action("Index", "Chats")";
            }
        });
    });


    // Sự kiện click trên nút gửi
    document.getElementById("sendButton").addEventListener("click", function () {
        sendMessage();
    });

    // Sự kiện keydown trên ô nhập liệu (gửi khi nhấn Enter)
    document.getElementById("chatInput").addEventListener("keydown", function (event) {
        if (event.key === "Enter") {
            // Ngừng hành động mặc định của phím Enter (không thêm dòng mới)
            event.preventDefault();
            sendMessage();
        }
    });

    // Hàm gửi tin nhắn
    function sendMessage() {
        var chatInput = document.getElementById("chatInput");  // Lấy nội dung từ input
        var messageText = chatInput.value.trim();  // Lấy giá trị tin nhắn và loại bỏ khoảng trắng

        if (!messageText) {  // Nếu tin nhắn trống, không gửi
            alert("Vui lòng nhập tin nhắn!");
            return;
        }

        var message = {
            type: "chat",
            sender: currentUser,  // Lấy tên người gửi từ ViewBag hoặc giá trị dynamic
            sendername: HotencurrentUser,
            text: messageText      // Nội dung tin nhắn
        };

        socket.send(JSON.stringify(message));

        // Hiển thị tin nhắn trên giao diện (ngay khi gửi)
        displayMessage(message);

        // Xóa nội dung trong input sau khi gửi
        chatInput.value = "";
        chatInput.focus();  // Đặt lại con trỏ vào ô nhập liệu
    }


</script>

<style>
    /* Cải thiện giao diện với nền đen */
    body {
        background-color: #1f1f1f; /* Nền đen */
        color: #fff; /* Văn bản màu trắng */
        font-family: 'Roboto', 'Segoe UI', Arial, sans-serif;
    }

    .movie-header {
        display: flex; /* Sử dụng Flexbox để căn chỉnh */
        justify-content: space-between; /* Khoảng cách đều giữa tiêu đề và nút */
        align-items: center; /* Căn giữa theo chiều dọc */
        padding: 10px 20px; /* Thêm khoảng cách bên trong */
        background-color: #2b2b2b; /* Nền tối cho phần tiêu đề */
        border-radius: 8px; /* Làm tròn góc */
        margin-bottom: 20px; /* Thêm khoảng cách phía dưới */
    }
    /*Nút quay lại*/
    .btn-back {
        padding: 10px 20px;
        background-color: #f44336; /* Màu đỏ */
        color: white;
        border: none;
        border-radius: 8px;
        cursor: pointer;
    }

        .btn-back:hover {
            background-color: #d32f2f;
        }
    /* Cải thiện giao diện cho phần phim */
    .film-container {
        display: flex;
        justify-content: space-between;
        gap: 20px;
        padding: 20px;
        background-color: #1f1f1f; /* Nền đen */
    }

    .film-player {
        width: 70%;
    }

    .film-iframe {
        width: 100%;
        height: 542px;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    }

    /* Phần chat */
    .chat-container {
        width: 28%;
        height: 500px;
        border-left: 1px solid #444;
        padding: 20px;
        display: flex;
        flex-direction: column;
        background-color: #2b2b2b; /* Nền tối cho chat */
        border-radius: 8px;
    }

    /* Thanh cuộn đẹp */
    .chat-box {
        flex: 1;
        overflow-y: scroll;
        margin-bottom: 10px;
        border: 1px solid #444;
        padding: 10px;
        height: 80%;
        background-color: #333;
        border-radius: 8px;
        scrollbar-width: thin;
        scrollbar-color: #555 #333; /* Màu cho thanh cuộn và nền */
    }

        /* Cải thiện giao diện thanh cuộn trên Webkit browsers */
        .chat-box::-webkit-scrollbar {
            width: 8px; /* Độ rộng thanh cuộn */
        }

        .chat-box::-webkit-scrollbar-thumb {
            background-color: #555; /* Màu của thanh cuộn */
            border-radius: 4px; /* Làm tròn thanh cuộn */
        }

        .chat-box::-webkit-scrollbar-track {
            background-color: #333; /* Màu nền của thanh cuộn */
        }

    .chat-input-wrapper {
        display: flex;
        align-items: center;
        margin-top: 10px;
    }

    .chat-input {
        flex: 1;
        padding: 10px;
        margin-right: 10px;
        border-radius: 8px;
        border: 1px solid #444;
        background-color: #222;
        color: #fff;
    }

    .btn-send {
        background-color: transparent;
        color: #007bff;
        border: none;
        cursor: pointer;
        font-size: 20px; /* Kích thước cho icon */
    }

    /* Cải thiện giao diện chọn phim */
    .movie-container {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
        justify-content: center;
        margin-top: 30px;
    }

    .movie-card {
        width: 200px;
        text-align: center;
        padding: 10px;
        border: 1px solid #444;
        border-radius: 8px;
        background-color: #2b2b2b;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .movie-card:hover {
            transform: scale(1.05);
            box-shadow: 0 6px 18px rgba(0, 0, 0, 0.4);
        }

    .movie-image {
        width: 100%;
        height: auto;
        border-radius: 8px;
        margin-bottom: 10px;
    }

    .movie-title {
        font-size: 24px;
        margin-bottom: 20px;
        color: #fff;
    }

    .select-movie-title {
        font-size: 20px;
        margin-top: 40px;
        text-align: center;
        color: #ccc;
    }

</style>
